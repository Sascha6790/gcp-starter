name: Build and Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'apps/frontend/**'
      - 'apps/backend/**'
      - '.ci/frontend.dockerfile'
      - '.ci/backend.dockerfile'
      - '.github/workflows/build-and-deploy.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  REGISTRY_GCP: europe-west3-docker.pkg.dev/qualified-gist-454616-m5/ghcr
  FRONTEND_IMAGE_NAME: sascha6790/frontend
  BACKEND_IMAGE_NAME: sascha6790/backend
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  build-and-push-frontend:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.environment || 'staging' }}
            type=raw,value=${{ github.event.inputs.environment || 'staging' }}-${{ steps.sha.outputs.short_sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .ci/frontend.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_ENV=${{ github.event.inputs.environment || 'staging' }}

  build-and-push-backend:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.environment || 'staging' }}
            type=raw,value=${{ github.event.inputs.environment || 'staging' }}-${{ steps.sha.outputs.short_sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .ci/backend.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_ENV=${{ github.event.inputs.environment || 'staging' }}

  deploy-frontend:
    name: Deploy Frontend to Cloud Run
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCLOUD_CREDENTIALS_KEY }}
          service_account: 'github@qualified-gist-454616-m5.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        id: deploy-frontend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: frontend-${{ github.event.inputs.environment || 'staging' }}
          image: ${{ env.REGISTRY_GCP }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.event.inputs.environment || 'staging' }}-${{ github.sha }}
          region: ${{ vars.GCP_REGION }}
          flags: |
            --allow-unauthenticated
            --port=4000
            --memory=512Mi
            --cpu=1
            --set-env-vars=NODE_ENV=${{ github.event.inputs.environment || 'production' }},BACKEND_API_URL=https://backend-${{ github.event.inputs.environment || 'staging' }}-${{ vars.GCP_PROJECT_ID }}.${{ vars.GCP_REGION }}.run.app

      - name: Show Output
        run: |
          echo "Frontend deployed to ${{ steps.deploy-frontend.outputs.url }}"

  deploy-backend:
    name: Deploy Backend to Cloud Run
    needs: [build-and-push-frontend, build-and-push-backend]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCLOUD_CREDENTIALS_KEY }}
          service_account: 'github@qualified-gist-454616-m5.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        id: deploy-backend
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: backend-${{ github.event.inputs.environment || 'staging' }}
          image: ${{ env.REGISTRY_GCP }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.event.inputs.environment || 'staging' }}-${{ github.sha }}
          region: ${{ vars.GCP_REGION }}
          flags: |
            --allow-unauthenticated
            --port=3000
            --memory=512Mi
            --cpu=1
            --set-env-vars=NODE_ENV=${{ github.event.inputs.environment || 'production' }},FRONTEND_URL=https://frontend-${{ github.event.inputs.environment || 'staging' }}-${{ vars.GCP_PROJECT_ID }}.a.run.app

      - name: Show Output
        run: |
          echo "Backend deployed to ${{ steps.deploy-backend.outputs.url }}"
