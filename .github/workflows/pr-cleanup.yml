name: PR Preview Cleanup

on:
  pull_request:
    types: [closed, locked]

permissions:
  contents: read
  packages: write
  pull-requests: read

env:
  REGISTRY: ghcr.io
  REGISTRY_GCP: europe-west3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/ghcr
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  GCP_SERVICE_ACCOUNT: ${{ vars.GCP_SERVICE_ACCOUNT }}

jobs:
  set-env:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      frontend_image_name: ${{ steps.set-names.outputs.frontend_image_name }}
      backend_image_name: ${{ steps.set-names.outputs.backend_image_name }}
    
    steps:
      - name: Set Image Names
        id: set-names
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "frontend_image_name=${REPO_OWNER}/frontend-preview" >> $GITHUB_OUTPUT
          echo "backend_image_name=${REPO_OWNER}/backend-preview" >> $GITHUB_OUTPUT

  cleanup:
    name: Cleanup Preview Environment
    needs: [set-env]
    runs-on: ubuntu-latest

    steps:
      - name: Get preview ID
        id: preview-id
        run: echo "id=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_CREDENTIALS_KEY }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Delete Cloud Run services
        run: |
          gcloud run services delete frontend-${{ steps.preview-id.outputs.id }} \
            --region=${{ env.GCP_REGION }} \
            --quiet || true
          
          gcloud run services delete backend-${{ steps.preview-id.outputs.id }} \
            --region=${{ env.GCP_REGION }} \
            --quiet || true

      - name: Delete Docker images
        run: |
          gcloud container images delete ${{ env.REGISTRY_GCP }}/${{ needs.set-env.outputs.frontend_image_name }}:${{ steps.preview-id.outputs.id }} \
            --quiet || true
            
          gcloud container images delete ${{ env.REGISTRY_GCP }}/${{ needs.set-env.outputs.backend_image_name }}:${{ steps.preview-id.outputs.id }} \
            --quiet || true

      - name: Cleanup Database and VPC
        uses: ./.github/actions/cleanup-database
        with:
          pr-number: ${{ github.event.pull_request.number }}
          project-id: ${{ env.GCP_PROJECT_ID }}
          region: ${{ env.GCP_REGION }}
          service-account: ${{ env.GCP_SERVICE_ACCOUNT }}
          terraform-dir: '.terraform'
